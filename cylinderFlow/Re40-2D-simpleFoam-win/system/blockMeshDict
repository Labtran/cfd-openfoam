/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.3.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

//D [m] do corpo cilindrico
Diam		1;

// malha
Ntang 10;
Nnorm 20;
Nfront 30;
Nback 50;
Nz 1;

//dimensao de z
maxZ 0.5;		

// variaveis de calculo
minZ #calc "-1.0*$maxZ";

radius          #calc "0.5*$Diam";
radiusNeg 	#calc "-1.0*$radius";
Angle 		45.0;
radAngle        #calc "degToRad($Angle)";
A               #calc "$radius*sin($radAngle)";
minA            #calc "-1.0*$A";

//R [m] do bloco
radiusBlock	#calc "3.0*$radius";
radiusBlockNeg  #calc "-1.0*$radiusBlock";
B               #calc "$radiusBlock*sin($radAngle)";
minB            #calc "-1.0*$B";

halfAngle #calc "$Angle/2";
radHalfAngle    #calc "degToRad($halfAngle)";

C		#calc "$radius*sin($radHalfAngle)";
minC		#calc "-1.0*$C";
D		#calc "$radius*cos($radHalfAngle)";
minD		#calc "-1.0*$D";

E		#calc "$radiusBlock*sin($radHalfAngle)";
minE		#calc "-1.0*$C";
F		#calc "$radiusBlock*cos($radHalfAngle)";
minF		#calc "-1.0*$D";


//dominio [m]
Lfront         #calc "20.0*$Diam";
LfrontNeg      #calc "-20.0*$Diam";
Lback          #calc "30.0*$Diam";
LbackNeg       #calc "-30.0*$Diam";


vertices
(
    //back up
    ($radius 		0 		$minZ)                  	//0
    ($radiusBlock 	0 		$minZ)                    	//1 
    ($Lback 	0 		$minZ)                   	//2   
    ($Lback 	$B 		$minZ)            		//3 
    ($B 		$B 		$minZ)      			//4
    ($A 		$A 		$minZ)      			//5
    ($Lback 	$Lfront 	$minZ)                   	//6  
    ($B 		$Lfront 	$minZ)             		//7
    (0 			$Lfront 	$minZ)                    	//8 
    (0 			$radiusBlock 	$minZ)                    	//9
    (0 			$radius 	$minZ)                  	//10
    ($radiusNeg 	0 		$minZ)                 		//11
    ($radiusBlockNeg 	0 		$minZ)                   	//12 
    ($LfrontNeg 	0 		$minZ)                   	//13
    ($LfrontNeg 	$B 		$minZ)            		//14
    ($minB 		$B 		$minZ)     			//15
    ($minA 		$A 		$minZ)     			//16
    ($LfrontNeg 	$Lfront 	$minZ)                   	//17
    ($minB 		$Lfront 	$minZ)    	        	//18
    
    //front up
    ($radius 		0 		$maxZ)                   	//19
    ($radiusBlock 	0 		$maxZ)                     	//20
    ($Lback 	0 		$maxZ)                    	//21
    ($Lback 	$B 		$maxZ)             		//22
    ($B 		$B 		$maxZ)       			//23
    ($A 		$A 		$maxZ)       			//24
    ($Lback 	$Lfront 	$maxZ)                    	//25
    ($B 		$Lfront 	$maxZ)              		//26
    (0 			$Lfront 	$maxZ)                     	//27
    (0 			$radiusBlock 	$maxZ)                     	//28 
    (0 			$radius 	$maxZ)                   	//29  
    ($radiusNeg 	0 		$maxZ)                  	//30
    ($radiusBlockNeg 	0 		$maxZ)                    	//31  
    ($LfrontNeg 	0 		$maxZ)                    	//32
    ($LfrontNeg 	$B 		$maxZ)             		//33  
    ($minB 		$B 		$maxZ)      			//34  
    ($minA 		$A 		$maxZ)      			//35 
    ($LfrontNeg 	$Lfront 	$maxZ)                    	//36
    ($minB 		$Lfront 	$maxZ)        		     	//37  
    
    //back down
    ($Lback 	$minB 		$minZ)            		//38
    ($B 		$minB 		$minZ)      			//39
    ($A 		$minA 		$minZ)      			//40
    ($Lback 	$LfrontNeg 	$minZ)                   	//41 
    ($B 		$LfrontNeg	$minZ)         		    	//42
    (0 			$LfrontNeg 	$minZ)                    	//43
    (0 			$radiusBlockNeg $minZ)                    	//44
    (0 			$radiusNeg 	$minZ)                  	//45
    ($LfrontNeg 	$minB 		$minZ)          	  	//46
    ($minB 		$minB 		$minZ)     			//47
    ($minA 		$minA 		$minZ)     			//48
    ($LfrontNeg 	$LfrontNeg 	$minZ)                   	//49
    ($minB 		$LfrontNeg 	$minZ)          	  	//50
    
    //front down
    ($Lback 	$minB		$maxZ)       		      	//51
    ($B 		$minB 		$maxZ)       			//52
    ($A 		$minA 		$maxZ)       			//53
    ($Lback 	$LfrontNeg	$maxZ)                    	//54 
    ($B 		$LfrontNeg 	$maxZ)         		     	//55
    (0 			$LfrontNeg 	$maxZ)                     	//56
    (0 			$radiusBlockNeg $maxZ)                     	//57
    (0 			$radiusNeg 	$maxZ)                   	//58
    ($LfrontNeg 	$minB 		$maxZ)          	   	//59
    ($minB 		$minB 		$maxZ)      			//60
    ($minA 		$minA 		$maxZ)      			//61
    ($LfrontNeg 	$LfrontNeg 	$maxZ)                    	//62
    ($minB 		$LfrontNeg 	$maxZ)            	 	//63
   
);

blocks
(
    //up
    hex (5 4 9 10 24 23 28 29)    ($Nnorm  $Ntang  $Nz) simpleGrading (2 1 1)       	//0
    hex (0 1 4 5 19 20 23 24)     ($Nnorm  $Ntang  $Nz) simpleGrading (2 1 1)         	//1
    hex (1 2 3 4 20 21 22 23)     ($Nback  $Ntang  $Nz) simpleGrading (6 1 1)         	//2
    hex (4 3 6 7 23 22 25 26)     ($Nback  $Nfront $Nz) simpleGrading (6 7 1)         	//3 
    hex (9 4 7 8 28 23 26 27)     ($Ntang  $Nfront $Nz) simpleGrading (1 7 1)         	//4
    hex (15 16 10 9 34 35 29 28)  ($Nnorm  $Ntang  $Nz) simpleGrading (0.5 1 1)    	//5
    hex (12 11 16 15 31 30 35 34) ($Nnorm  $Ntang  $Nz) simpleGrading (0.5 1 1)   	//6
    hex (13 12 15 14 32 31 34 33) ($Nfront $Ntang  $Nz) simpleGrading (0.15 1 1)   	//7
    hex (14 15 18 17 33 34 37 36) ($Nfront $Nfront $Nz) simpleGrading (0.15 7 1)   	//8
    hex (15 9 8 18 34 28 27 37)   ($Ntang  $Nfront $Nz) simpleGrading (1 7 1)       	//9  
    //down
    hex (40 45 44 39 53 58 57 52) ($Ntang  $Nnorm  $Nz) simpleGrading (1 2 1)      	//10 
    hex (0 40 39 1 19 53 52 20)   ($Ntang  $Nnorm  $Nz) simpleGrading (1 2 1)           //11  
    hex (1 39 38 2 20 52 51 21)   ($Ntang  $Nback  $Nz) simpleGrading (1 6 1)        	//12 
    hex (39 42 41 38 52 55 54 51) ($Nfront $Nback  $Nz) simpleGrading (7 6 1)      	//13   
    hex (44 43 42 39 57 56 55 52) ($Nfront $Ntang  $Nz) simpleGrading (7 1 1)           //14 
    hex (47 44 45 48 60 57 58 61) ($Ntang  $Nnorm  $Nz) simpleGrading (1 0.5 1)         //15 
    hex (12 47 48 11 31 60 61 30) ($Ntang  $Nnorm  $Nz) simpleGrading (1 0.5 1)         //16 
    hex (13 46 47 12 32 59 60 31) ($Ntang  $Nfront $Nz) simpleGrading (1 0.15 1)  	//17  
    hex (46 49 50 47 59 62 63 60) ($Nfront $Nfront $Nz) simpleGrading (7 0.15 1)  	//18  
    hex (47 50 43 44 60 63 56 57) ($Nfront $Ntang  $Nz) simpleGrading (7 1 1)           //19   
);

edges
(
    //up
    arc 0 5   ($D 	$C $minZ)
    arc 5 10  ($C 	$D $minZ)
    arc 19 24 ($D 	$C $maxZ)
    arc 24 29 ($C 	$D $maxZ)
    arc 11 16 ($minD 	$C $minZ)
    arc 16 10 ($minC 	$D $minZ)
    arc 30 35 ($minD 	$C $maxZ)
    arc 35 29 ($minC 	$D $maxZ)
    //down
    arc 0 40  ($D 	$minC $minZ)
    arc 40 45 ($C 	$minD $minZ)
    arc 19 53 ($D 	$minC $maxZ)
    arc 53 58 ($C 	$minD $maxZ)
    arc 11 48 ($minD 	$minC $minZ)
    arc 48 45 ($minC 	$minD $minZ)
    arc 30 61 ($minD 	$minC $maxZ)
    arc 61 58 ($minC 	$minD $maxZ)
);

patches
(
    patch in
    (
        //up
        (14 13 32 33)
        (17 14 33 36)
        //down
        (13 46 59 32) 
        (46 49 62 59) 
    
    )
    patch out
    (
        //up
        (2 3 22 21)
        (3 6 25 22)
        //down
        (38 2 21 51) 
        (41 38 51 54) 

    )
    wall cylinder
    (
        //up
        (10 5 24 29)
        (5 0 19 24)
        (16 10 29 35)
        (11 16 35 30)
        //down
        (40 45 58 53) 
        (0 40 53 19)  
        (45 48 61 58) 
        (48 11 30 61) 
    )
    symmetryPlane sym1
    (
        (7 8 27 26)
        (6 7 26 25)
        (8 18 37 27)
        (18 17 36 37)
    )
        
    symmetryPlane sym2
    (
        (43 42 55 56) 
        (42 41 54 55) 
        (50 43 56 63) 
        (49 50 63 62) 
    )
    empty back 
    (
       //up
       (5 10 9 4)
       (0 5 4 1)
       (1 4 3 2)
       (4 7 6 3)
       (9 8 7 4)
       (16 15 9 10)
       (11 12 15 16)
       (12 13 14 15)
       (14 17 18 15)
       (15 18 8 9)
       //down
       (45 40 39 44)
       (40 0 1 39)
       (1 2 38 39)
       (39 38 41 42)
       (44 39 42 43)
       (48 45 44 47)
       (11 48 47 12)
       (13 12 47 46)
       (46 47 50 49)
       (47 44 43 50)
    )
    empty front
    (
       //up
       (24 23 28 29)
       (20 23 24 19)
       (21 22 23 20)
       (22 25 26 23)
       (26 27 28 23)
       (28 34 35 29)
       (34 31 30 35)
       (33 32 31 34)
       (36 33 34 37)
       (37 34 28 27)
       //down
       (53 58 57 52)
       (19 53 52 20)
       (21 20 52 51)
       (51 52 55 54)
       (52 57 56 55)
       (58 61 60 57)
       (61 30 31 60)
       (31 32 59 60)
       (60 59 62 63)
       (57 60 63 56)
    )
);

mergePatchPairs
(
);

// ************************************************************************* //
